import os
import random
import requests
import asyncio
from dotenv import load_dotenv
from deep_translator import GoogleTranslator
from telegram import Bot
from telegram.constants import ParseMode

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")

bot = Bot(token=BOT_TOKEN)

# --- –ü–æ–ª—É—á–∞–µ–º —Ü–∏—Ç–∞—Ç—É ---
async def get_quote():
    try:
        response = requests.get("https://zenquotes.io/api/random", timeout=15)
        if response.status_code == 200:
            data = response.json()[0]
            quote = data["q"]
            author = data["a"]
            return f"{quote}\n‚Äî {author}"
        else:
            print(f"–û—à–∏–±–∫–∞ —Ü–∏—Ç–∞—Ç—ã: –∫–æ–¥ {response.status_code}")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ —Ü–∏—Ç–∞—Ç—ã:", e)
    return None


# --- –ü–µ—Ä–µ–≤–æ–¥ —Ü–∏—Ç–∞—Ç—ã ---
async def translate_quote(quote_text):
    try:
        result = GoogleTranslator(source='en', target='ru').translate(quote_text)
        return result
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞:", e)
        return None


# --- –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É ---
async def get_image_url():
    width = random.choice([800, 1000, 1200])
    height = random.choice([600, 800])
    return f"https://picsum.photos/{width}/{height}"


# --- –ü—É–±–ª–∏–∫—É–µ–º –ø–æ—Å—Ç ---
async def publish_post():
    print("üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞...")

    quote = await get_quote()
    if not quote:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É.")
        return

    translated = await translate_quote(quote)
    if not translated:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ü–∏—Ç–∞—Ç—É.")
        return

    image_url = await get_image_url()

    post_text = (
        f"üá¨üáß {quote}\n\n"
        f"üá∑üá∫ {translated}\n\n"
        f"#—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è #—é–º–æ—Ä #—ç–ª–µ–∫—Ç—Ä–∏—á–∫–∞"
    )

    try:
        await bot.send_photo(
            chat_id=CHANNEL_ID,
            photo=image_url,
            caption=post_text,
            parse_mode=ParseMode.HTML,
        )
        print("‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:", e)


# --- –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞ ---
async def scheduler():
    while True:
        await publish_post()
        print("üïí –°–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞...")
        await asyncio.sleep(3 * 60 * 60)  # 3 —á–∞—Å–∞


async def main():
    print("ü§ñ –≠–ª–µ–∫—Ç—Ä–∏—á–∫–∞ 5.0 –∑–∞–ø—É—â–µ–Ω–∞ ‚Äî –∞–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞.")
    await scheduler()


if __name__ == "__main__":
    asyncio.run(main())
