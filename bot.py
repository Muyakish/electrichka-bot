import os
import time
import requests
from threading import Thread
from flask import Flask
from io import BytesIO
from googletrans import Translator
import logging
import random
import traceback
from PIL import Image

# ------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ -------------------
logging.basicConfig(filename='bot.log', level=logging.INFO,
                    format='%(asctime)s - %(levelname)s - %(message)s')

# ------------------- Flask —Å–µ—Ä–≤–µ—Ä -------------------
app = Flask(__name__)

@app.route('/')
def home():
    return "üöÜ –≠–ª–µ–∫—Ç—Ä–∏—á–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç."

def run_flask():
    port = int(os.getenv("PORT", 10000))
    app.run(host="0.0.0.0", port=port)

Thread(target=run_flask, daemon=True).start()

# ------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ -------------------
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "–≤–∞—à_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID", "–≤–∞—à_—á–∞—Ç_id")
POST_INTERVAL = 3 * 60 * 60  # –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞
FIRMA_SIGNATURE = "‚Äî –í–∞—à–∏ –º—ã—Å–ª–∏ —Å –≠–ª–µ–∫—Ç—Ä–∏—á–∫–æ–π üöÜ"

translator = Translator()
HASHTAGS = ["#—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è", "#—é–º–æ—Ä", "#—Ü–∏—Ç–∞—Ç–∞", "#–º–æ—Ç–∏–≤–∞—Ü–∏—è", "#–º—ã—Å–ª–∏"]
CATEGORIES = ["–∂–∏–∑–Ω—å", "—Å—á–∞—Å—Ç—å–µ", "–º–æ—Ç–∏–≤–∞—Ü–∏—è", "—é–º–æ—Ä", "—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è"]

LOGO_PATH = "logo.png"  # –ø–æ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª –ª–æ–≥–æ—Ç–∏–ø–∞ —Ä—è–¥–æ–º —Å –±–æ—Ç–æ–º

# ------------------- –§—É–Ω–∫—Ü–∏–∏ -------------------
def get_quote():
    try:
        res = requests.get("https://zenquotes.io/api/random", timeout=10)
        data = res.json()[0]
        quote = data.get('q', '–¶–∏—Ç–∞—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
        author = data.get('a', '')
        return quote, author
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç—ã: {e}")
        return "–¶–∏—Ç–∞—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞", ""

def translate_quote(text):
    try:
        return translator.translate(text, dest='ru').text
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {e}")
        return text

def get_image():
    try:
        url = f"https://picsum.photos/800/600?random={int(time.time())}"
        img_bytes = requests.get(url, timeout=10).content
        image = Image.open(BytesIO(img_bytes)).convert("RGBA")
        return overlay_logo(image)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return None

def overlay_logo(image):
    try:
        logo = Image.open(LOGO_PATH).convert("RGBA")
        # –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        base_width = int(image.width * 0.15)
        w_percent = (base_width / float(logo.width))
        h_size = int((float(logo.height) * float(w_percent)))
        logo = logo.resize((base_width, h_size), Image.ANTIALIAS)

        # –ø–æ–∑–∏—Ü–∏—è –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É
        position = (image.width - logo.width - 10, image.height - logo.height - 10)
        image.paste(logo, position, logo)
        output = BytesIO()
        image.save(output, format="PNG")
        output.seek(0)
        return output
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞: {e}")
        return None

def check_telegram():
    try:
        res = requests.get(f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getMe", timeout=10)
        return res.status_code == 200
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram API: {e}")
        return False

def send_post(quote, author, image_bytes):
    if image_bytes is None:
        logging.warning("–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø–æ—Å—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        return
    hashtags = " ".join(random.sample(HASHTAGS, k=2))
    category = random.choice(CATEGORIES)
    text = f"[{category.upper()}] {quote}\n‚Äî {author}\n{FIRMA_SIGNATURE}\n{hashtags}"
    if not check_telegram():
        logging.error("Telegram API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ—Å—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        return
    try:
        requests.post(
            f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendPhoto",
            data={"chat_id": TELEGRAM_CHAT_ID, "caption": text},
            files={"photo": image_bytes},
            timeout=15
        )
        logging.info("–ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {traceback.format_exc()}")

def post_cycle():
    while True:
        try:
            quote, author = get_quote()
            quote_ru = translate_quote(quote)
            image_bytes = get_image()
            send_post(f"{quote} ({quote_ru})", author, image_bytes)
            time.sleep(POST_INTERVAL)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –ø–æ—Å—Ç–∏–Ω–≥–∞: {traceback.format_exc()}")
            time.sleep(60)

# ------------------- –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ -------------------
Thread(target=post_cycle, daemon=True).start()

# ------------------- –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª -------------------
while True:
    time.sleep(60)
